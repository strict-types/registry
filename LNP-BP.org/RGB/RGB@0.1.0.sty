{-
  Id: xray_susan_reward_Fvh85VcsTSb2zmdwT13q32Rv9M14nvMaGvCT3JMtRQWf
  Name: RGB
  Version: 0.1.0
  Description: Consensus layer for RGB smart contracts
  Author: Dr Maxim Orlovsky <orlovsky@lnp-bp.org>
  Copyright (C) 2023 LNP/BP Standards Association. All rights reserved.
  License: Apache-2.0
-}

typelib RGB -- xray_susan_reward_Fvh85VcsTSb2zmdwT13q32Rv9M14nvMaGvCT3JMtRQWf

import collect_equator_sahara_9ar2N9jT1gHk5Ei9b5uoVoVbvWAXFpiWE2Dxg49iMR2R as AluVM
import cubic_filter_vampire_AqBBP1ZeTXrdAePf6SBcUGbttpvxpHKG7uJLKFkVxtGi as Bitcoin
import manila_origami_blonde_GUPDJLSfnzeYN8udLa1Z7qFLZ45oiyekN2DR8DRPHqri as BPCore
import classic_vitamin_turtle_GWq5E83fACXwLpRjdGWCAH1iLA5BvCg3cUWXGD6Uzw29 as StrictTypes


data AluScript        :: libs AluVM.LibId, entryPoints {[Byte ^ 3] -> AluVM.LibSite}
data AssignRevealedAttachBlindSealTxPtr :: confidential (seal BPCore.SecretSeal, state ConcealedAttach)
                       | confidentialState (seal BPCore.BlindSealTxPtr, state ConcealedAttach)
                       | confidentialSeal (seal BPCore.SecretSeal, state RevealedAttach)
                       | revealed (seal BPCore.BlindSealTxPtr, state RevealedAttach)
data AssignRevealedAttachBlindSealTxid :: confidential (seal BPCore.SecretSeal, state ConcealedAttach)
                       | confidentialState (seal BPCore.BlindSealTxid, state ConcealedAttach)
                       | confidentialSeal (seal BPCore.SecretSeal, state RevealedAttach)
                       | revealed (seal BPCore.BlindSealTxid, state RevealedAttach)
data AssignRevealedDataBlindSealTxPtr :: confidential (seal BPCore.SecretSeal, state ConcealedData)
                       | confidentialState (seal BPCore.BlindSealTxPtr, state ConcealedData)
                       | confidentialSeal (seal BPCore.SecretSeal, state RevealedData)
                       | revealed (seal BPCore.BlindSealTxPtr, state RevealedData)
data AssignRevealedDataBlindSealTxid :: confidential (seal BPCore.SecretSeal, state ConcealedData)
                       | confidentialState (seal BPCore.BlindSealTxid, state ConcealedData)
                       | confidentialSeal (seal BPCore.SecretSeal, state RevealedData)
                       | revealed (seal BPCore.BlindSealTxid, state RevealedData)
data AssignRevealedValueBlindSealTxPtr :: confidential (seal BPCore.SecretSeal, state ConcealedFungible)
                       | confidentialState (seal BPCore.BlindSealTxPtr, state ConcealedFungible)
                       | confidentialSeal (seal BPCore.SecretSeal, state RevealedFungible)
                       | revealed (seal BPCore.BlindSealTxPtr, state RevealedFungible)
data AssignRevealedValueBlindSealTxid :: confidential (seal BPCore.SecretSeal, state ConcealedFungible)
                       | confidentialState (seal BPCore.BlindSealTxid, state ConcealedFungible)
                       | confidentialSeal (seal BPCore.SecretSeal, state RevealedFungible)
                       | revealed (seal BPCore.BlindSealTxid, state RevealedFungible)
data AssignVoidStateBlindSealTxPtr :: confidential (seal BPCore.SecretSeal, state VoidState)
                       | confidentialState (seal BPCore.BlindSealTxPtr, state VoidState)
                       | confidentialSeal (seal BPCore.SecretSeal, state VoidState)
                       | revealed (seal BPCore.BlindSealTxPtr, state VoidState)
data AssignVoidStateBlindSealTxid :: confidential (seal BPCore.SecretSeal, state VoidState)
                       | confidentialState (seal BPCore.BlindSealTxid, state VoidState)
                       | confidentialSeal (seal BPCore.SecretSeal, state VoidState)
                       | revealed (seal BPCore.BlindSealTxid, state VoidState)
data AssignmentsBlindSealTxPtr :: {U16 -> ^ ..0xff TypedAssignsBlindSealTxPtr}
data AssignmentsBlindSealTxid :: {U16 -> ^ ..0xff TypedAssignsBlindSealTxid}
data AttachId         :: [Byte ^ 32]
data BlindingFactor   :: [Byte ^ 32]
data BundleItem       :: inputs {U16 ^ ..0xff}, transition Transition?
data ConcealedAttach  :: [Byte ^ 32]
data ConcealedData    :: [Byte ^ 32]
data ConcealedFungible :: commitment PedersenCommitment, rangeProof RangeProof
data ContractId       :: [Byte ^ 32]
data Extension        :: ffv Ffv
                       , contractId ContractId
                       , extensionType U16
                       , metadata [Byte]
                       , globals GlobalState
                       , assignments AssignmentsBlindSealTxid
                       , redeemed Redeemed
                       , valencies Valencies
data ExtensionSchema  :: metadata StrictTypes.SemId
                       , globals {U16 -> ^ ..0xff Occurrences}
                       , redeems {U16 ^ ..0xff}
                       , assignments {U16 -> ^ ..0xff Occurrences}
                       , valencies {U16 ^ ..0xff}
data Ffv              :: U16
data FungibleState    :: bits64:8 U64
data FungibleType     :: unsigned64Bit:8

data Genesis          :: ffv Ffv
                       , schemaId SchemaId
                       , chain Bitcoin.Chain
                       , metadata [Byte]
                       , globals GlobalState
                       , assignments AssignmentsBlindSealTxid
                       , valencies Valencies
data GenesisSchema    :: metadata StrictTypes.SemId
                       , globals {U16 -> ^ ..0xff Occurrences}
                       , assignments {U16 -> ^ ..0xff Occurrences}
                       , valencies {U16 ^ ..0xff}
data GlobalState      :: {U16 -> ^ ..0xff GlobalValues}
data GlobalStateSchema :: semId StrictTypes.SemId, maxItems U16
data GlobalValues     :: [RevealedData ^ 1..]
data Input            :: prevOut Opout, reserved ReservedByte
data Inputs           :: {Input ^ ..0xff}
data MediaType        :: any:255

data NoiseDumb        :: [Byte ^ 512]
data Occurrences      :: min U16, max U16
data OpId             :: [Byte ^ 32]
data Opout            :: op OpId
                       , ty U16
                       , no U16
data PedersenCommitment :: [Byte ^ 33]
data RangeProof       :: placeholder:255 NoiseDumb
data Redeemed         :: {U16 -> ^ ..0xff OpId}
data ReservedByte     :: U8
data RevealedAttach   :: id AttachId
                       , mediaType MediaType
                       , salt U64
data RevealedData     :: [Byte]
data RevealedFungible :: value FungibleState, blinding BlindingFactor
data Schema           :: ffv Ffv
                       , subsetOf ()?
                       , globalTypes {U16 -> ^ ..0xff GlobalStateSchema}
                       , ownedTypes {U16 -> ^ ..0xff StateSchema}
                       , valencyTypes {U16 ^ ..0xff}
                       , genesis GenesisSchema
                       , extensions {U16 -> ^ ..0xff ExtensionSchema}
                       , transitions {U16 -> ^ ..0xff TransitionSchema}
                       , typeSystem StrictTypes.TypeSystem
                       , script Script
data SchemaId         :: [Byte ^ 32]
data SchemaSchema     :: ffv Ffv
                       , subsetOf Schema?
                       , globalTypes {U16 -> ^ ..0xff GlobalStateSchema}
                       , ownedTypes {U16 -> ^ ..0xff StateSchema}
                       , valencyTypes {U16 ^ ..0xff}
                       , genesis GenesisSchema
                       , extensions {U16 -> ^ ..0xff ExtensionSchema}
                       , transitions {U16 -> ^ ..0xff TransitionSchema}
                       , typeSystem StrictTypes.TypeSystem
                       , script Script
data Script           :: aluVm AluScript
data StateSchema      :: declarative ()
                       | fungible FungibleType
                       | structured StrictTypes.SemId
                       | attachment MediaType
data Transition       :: ffv Ffv
                       , contractId ContractId
                       , transitionType U16
                       , metadata [Byte]
                       , globals GlobalState
                       , inputs Inputs
                       , assignments AssignmentsBlindSealTxPtr
                       , valencies Valencies
data TransitionBundle :: {[Byte ^ 32] -> ^ ..0xff BundleItem}
data TransitionSchema :: metadata StrictTypes.SemId
                       , globals {U16 -> ^ ..0xff Occurrences}
                       , inputs {U16 -> ^ ..0xff Occurrences}
                       , assignments {U16 -> ^ ..0xff Occurrences}
                       , valencies {U16 ^ ..0xff}
data TypedAssignsBlindSealTxPtr :: declarative [AssignVoidStateBlindSealTxPtr]
                       | fungible [AssignRevealedValueBlindSealTxPtr]
                       | structured [AssignRevealedDataBlindSealTxPtr]
                       | attachment:255 [AssignRevealedAttachBlindSealTxPtr]
data TypedAssignsBlindSealTxid :: declarative [AssignVoidStateBlindSealTxid]
                       | fungible [AssignRevealedValueBlindSealTxid]
                       | structured [AssignRevealedDataBlindSealTxid]
                       | attachment:255 [AssignRevealedAttachBlindSealTxid]
data Valencies        :: {U16 ^ ..0xff}
data VoidState        :: ()

